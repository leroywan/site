{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","blog","fields","slug","imageUrl","images","key","className","itemScope","itemType","backgroundImage","to","itemProp","tags","item","i","dangerouslySetInnerHTML","__html","excerpt","textAlign","pageQuery"],"mappings":"2FAAA,0HAiFeA,UA1EG,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,kBAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,kBAAC,IAAD,MACA,yLAUJ,kBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,kBAAC,IAAD,MACA,wBAAIK,MAAO,CAAEC,UAAU,SACpBL,EAAMM,KAAI,SAACC,GACV,GAA8B,aAA1BA,EAAKC,YAAYC,KACnB,OAAO,KAET,IAAMV,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKG,OAAOC,KAC9CC,EAAQ,OAAUL,EAAKC,YAAYK,OAAO,GAAlC,IACd,OACE,wBAAIC,IAAKP,EAAKG,OAAOC,MACnB,6BACEI,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,yBACEF,UAAU,kBACVX,MAAO,CAAEc,gBAAiBN,KAE5B,gCACE,4BACE,kBAAC,OAAD,CAAMO,GAAIZ,EAAKG,OAAOC,KAAMS,SAAS,OACnC,0BAAMA,SAAS,YAAYrB,KAG9BQ,EAAKC,YAAYa,KAAKf,KAAI,SAACgB,EAAMC,GAAP,OACzB,2BAAOR,UAAU,eAAeD,IAAQS,EAAL,IAAUD,GAC1CA,OAIP,iCACE,uBACEE,wBAAyB,CACvBC,OAAQlB,EAAKC,YAAYkB,SAAWnB,EAAKmB,SAE3CN,SAAS,gBAEX,yBAAKhB,MAAO,CAAEuB,UAAW,UACvB,kBAAC,OAAD,CAAMR,GAAIZ,EAAKG,OAAOC,MACpB,gEAef,IAAMiB,EAAS","file":"component---src-pages-index-js-5af2ad6573a338a6b3f2.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map((post) => {\n          if (post.frontmatter.blog !== \"projects\") {\n            return null;\n          }\n          const title = post.frontmatter.title || post.fields.slug;\n          const imageUrl = `url(${post.frontmatter.images[0]})`;\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <div\n                  className=\"post-list-image\"\n                  style={{ backgroundImage: imageUrl }}\n                ></div>\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  {post.frontmatter.tags.map((item, i) => (\n                    <small className=\"project-tags\" key={`${i}-${item}`}>\n                      {item}\n                    </small>\n                  ))}\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.excerpt || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                  <div style={{ textAlign: \"right\" }}>\n                    <Link to={post.fields.slug}>\n                      <small>continue reading â†’</small>\n                    </Link>\n                  </div>\n                </section>\n              </article>\n            </li>\n          );\n        })}\n      </ol>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___post_order], order: DESC }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          excerpt\n          images\n          tags\n          blog\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}